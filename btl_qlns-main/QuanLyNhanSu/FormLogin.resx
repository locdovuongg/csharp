<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>